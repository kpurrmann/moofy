<?php

//require_once dirname(__FILE__) . '/../../../application/models/EmailMapper.php';
require '../library/Ibuildings/Test/PHPUnit/DatabaseTestCase/Abstract.php';

/**
 * Test class for Application_Model_EmailMapper.
 * Generated by PHPUnit on 2012-06-24 at 22:19:00.
 */
class Application_Model_EmailMapperTest extends Ibuildings_Test_PHPUnit_DatabaseTestCase_Abstract {

	protected $_initialSeedFile = 'emailsSeed.xml';
	protected $_emailMapper;
	protected $_dataSet;

	public function setUp() {
		$this->bootstrap = new Zend_Application(APPLICATION_ENV, APPLICATION_PATH . '/configs/application.ini');
		$this->_emailMapper = new Application_Model_EmailMapper();
		$this->_dataSet = new Zend_Test_PHPUnit_Db_DataSet_QueryDataSet($this->getConnection());
		parent::setUp();
	}

	public function testCreateEmail() {
		$data = array(
		   'email'	 => 'user3@test.de',
		   'type'	  => 1,
		   'hash'	  => 'myHashInsert',
		   'activated' => 0,
		   'created'   => '2012-06-25 20:55:48');

		$email = $this->_emailMapper->setEntry($data);
		$this->_emailMapper->save($email);

		$this->_dataSet->addTable('emails', 'SELECT * FROM emails');
		$this->assertDataSetsMatchXML('emailsInsertIntoAssertion.xml', $this->_dataSet);
	}

	public function testFindEmail() {
		$email = $this->_emailMapper->find(1);
		$this->_dataSet = $this->convertRecordToDataSet($email->toArray(), 'emails');
		$this->assertDataSetsMatchXML('emailsFindOne.xml', $this->_dataSet);
	}

	public function testFindByHashEmail() {

		$data = array(
		   'hash' => 'myHash',
		);

		$email = $this->_emailMapper->findByHash($data['hash']);
		$this->_dataSet = $this->convertRecordToDataSet($email->toArray(), 'emails');
		$this->assertDataSetsMatchXML('emailsFindOne.xml', $this->_dataSet);
	}

	public function testSetEntry(){
		$data = array(
		   'email'	 => 'user3@test.de',
		   'type'	  => 1,
		   'hash'	  => 'myHashInsert',
		   'activated' => 0,
		   'created'   => '2012-06-25 20:55:48');

		$email = $this->_emailMapper->setEntry($data);
		$this->assertInstanceOf('Application_Model_Email', $email);
		$this->assertEquals($data['email'], $email->getEmail());
		$this->assertEquals($data['type'], $email->getEmail_type());
		$this->assertEquals($data['hash'], $email->getHash());
		$this->assertEquals($data['activated'], $email->getActivated());
		$this->assertEquals($data['created'], $email->getCreated());
	}


	public function testUpdateEmail() {
		$data = array(
		   'activated' => 0,
		   'email'	 => 'act@test.de'
		);

		$email = $this->_emailMapper->find(2);
		$email->setActivated($data['activated']);
		$email->setEmail($data['email']);
		$this->_emailMapper->save($email);

		$this->_dataSet->addTable('emails', 'SELECT * FROM emails');
		$this->assertDataSetsMatchXML('emailsUpdateAssertion.xml', $this->_dataSet);
	}

}

?>
